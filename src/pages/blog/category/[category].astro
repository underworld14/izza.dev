---
import Layout from '../../../layouts/Layout.astro';
import Navbar from '../../../components/Navbar.astro';
import Footer from '../../../components/Footer.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  
  // Get all unique categories
  const categories = [...new Set(allPosts.flatMap(post => post.data.categories))];
  
  // For each category, filter posts that include that category
  return categories.map(category => {
    const filteredPosts = allPosts.filter(post => 
      post.data.categories.includes(category)
    );
    
    return {
      params: { category: category.toLowerCase().replace(/\s+/g, '-') },
      props: { 
        category, 
        posts: filteredPosts 
      }
    };
  });
}

interface Props {
  category: string;
  posts: CollectionEntry<'blog'>[];
}

const { category, posts } = Astro.props;

// Sort posts by date in descending order (newest first)
posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Format for display
const formattedPosts = posts.map((post) => ({
  title: post.data.title,
  description: post.data.description,
  date: post.data.date,
  slug: post.slug,
  categories: post.data.categories
}));
---

<Layout 
  title={`${category} | Blog | Izza Dev`}
  description={`Articles about ${category} - web development, design, and technology insights.`}
>
  <Navbar />
  
  <main>
    <section class="section-spacing container-custom">
      <div class="mb-10">
        <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:underline flex items-center gap-1">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
            <path d="m15 18-6-6 6-6"></path>
          </svg>
          Back to all posts
        </a>
        
        <h1 class="text-4xl font-bold mt-4">
          Category: <span class="text-blue-600 dark:text-blue-400">{category}</span>
        </h1>
        <p class="text-neutral-600 dark:text-neutral-400 mt-2">
          Showing {formattedPosts.length} post{formattedPosts.length !== 1 ? 's' : ''}
        </p>
      </div>
      
      <div class="space-y-10">
        {formattedPosts.map((post) => (
          <article class="group">
            <a href={`/blog/${post.slug}`} class="block">
              <time datetime={post.date.toISOString()} class="text-sm text-neutral-600 dark:text-neutral-400">
                {new Date(post.date).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              
              <h2 class="text-2xl font-semibold mt-1 mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                {post.title}
              </h2>
              
              <p class="text-neutral-600 dark:text-neutral-400 mb-4">{post.description}</p>
              
              <div class="flex flex-wrap gap-2">
                {post.categories.map((category: string) => (
                  <span class="inline-flex items-center rounded-full bg-neutral-100 px-2.5 py-0.5 text-xs font-medium text-neutral-800 dark:bg-neutral-800 dark:text-neutral-300">
                    {category}
                  </span>
                ))}
              </div>
            </a>
          </article>
        ))}
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>
